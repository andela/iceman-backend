swagger: '2.0'
info:
  description: |
    Barefoot nomad is an application that will enable its “Company Nomads” book their international travel and accommodation globally; easily and conveniently across all the locations/centers where the Company has its operations.
  version: 1.0.0
  title: Barefoot Nomad
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

tags:
  - name: Auth
    description: Manage User Authentication and Profile
  - name: Requests
    description: Manage Travel Requests
host: localhost:3000
basePath: /api/v1
paths:
  /auth/profile:
    get:
      tags:
        - Auth
      summary: View user's profile information
      description: View user's profile information
      produces:
        - application/json
      responses:
        401:
          description: No token provided
          schema:
            $ref: '#definitions/ErrorResponse'
        400:
          description: Invalid token
          schema:
            $ref: '#definitions/ErrorResponse'
        200:
          description: Success
          schema:
            $ref: '#definitions/UsersResponse'
      security:
        - api_key: []
    patch:
      tags:
        - Auth
      summary: Update user's profile information
      description: Update user's profile information
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: token
          description: User authentication token
          required: true
          type: string
        - in: body
          name: body
          description: Details to be updated
          required: true
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              middleName:
                type: string
              gender:
                type: string
              dateOfBirth:
                type: string
                format: date
              preferredLanguage:
                type: string
              residentialAddress:
                type: string
              preferredCurrency:
                type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#definitions/UsersResponse'
        400:
          description: Bad request
          schema:
            $ref: '#definitions/ErrorResponse'
        401:
          description: No token provided
          schema:
            $ref: '#definitions/ErrorResponse'
      security:
        - api_key: []

  /auth/login:
    post:
      tags:
        - Auth
      summary: Logs in a user
      description: Logs in a user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User details
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
      responses:
        400:
          description: Invalid Credentials
          schema:
            $ref: '#definitions/ErrorResponse'
        500:
          description: Unexpected Error
        200:
          description: Success
          schema:
            $ref: '#definitions/AuthResponse'

  /auth/signup:
    post:
      tags:
        - Auth
      summary: Create User Account
      description: Creates a new user account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User details
          required: true
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
                format: email
              password:
                type: string
      responses:
        409:
          description: Email already exists
          schema:
            $ref: '#definitions/ErrorResponse'
        201:
          description: Success
          schema:
            $ref: '#definitions/AuthResponse'

  /auth/facebook:
    get:
      tags:
        - Auth
      summary: Logs in a user using facebook
      produces:
        - application/json
      responses:
        500:
          description: Unexpected Error
        400:
          description: Invalid Credentials
        200:
          description: Success
          schema:
            $ref: '#definitions/AuthResponse'

  /auth/google:
    get:
      tags:
        - Auth
      summary: Logs in a user using google
      produces:
        - application/json
      responses:
        500:
          description: Unexpected Error
        400:
          description: Invalid Credentials
        200:
          description: Success
          schema:
            $ref: '#definitions/AuthResponse'

  /auth/verify:
    get:
      tags:
        - Auth
      summary: Verifies User Email
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: token
          description: User token
          required: true
          schema:
            type: string
            properties:
              email:
                type: string
                format: email
      responses:
        400:
          description: Error
        200:
          description: Success

  /auth/resend_verification_link:
    post:
      tags:
        - Auth
      summary: Resend Verification Link
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: email
          description: User email
          required: true
          schema:
            type: string
            properties:
              email:
                type: string
                format: email
      responses:
        400:
          description: error
        200:
          description: Success

  /auth/forgot_password:
    post:
      tags:
        - Auth
      summary: sends change mail paswword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: email
          description: User Email
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
      responses:
        404:
          description: Email Not Found
        200:
          description: Success

  /auth/reset_password/{token}:
    patch:
      tags:
        - Auth
      summary: changes user password
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: password
          description: New password
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
        - in: path
          name: token
          required: true
          type: string
      responses:
        404:
          description: Email Not Found
        200:
          description: Success

  /auth/assign_role:
    patch:
      tags:
        - Auth
      summary: Assign user role
      description: Assign user role with Super Administrator Access
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Role schema
          description: Role assignment details
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              roleId:
                type: integer
      responses:
        200:
          description: successful operation
        400:
          description: Error
        401:
          description: Access Denied
        403:
          description: Authentication failed
      security:
        - api_key: [] 

  /requests:
    get:
      tags:
        - Requests
      summary: Retrieve my requests
      produces:
        - application/json
      responses:
        404:
          description: You've not made any requests
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            $ref: '#definitions/MyRequest'
      security:
        - api_key: []

  /requests/pending:
    get:
      tags:
        - Requests
      summary: Manager retrieves requests of downlines
      produces:
        - application/json
      responses:
        404:
          description: No pending requests
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            $ref: '#definitions/DownlineRequests'
      security:
        - api_key: []

  /requests/multi-city:
    post:
      tags:
        - Requests
      summary: Multi City Request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Multiple Request Destzination
          required: true
          schema:
            properties:
              source:
                type: string
                required: true
              destination:
                type: string
              travelDate:
                type: string
                format: date
                required: true
              returnDate:
                type: string
                format: date
                required: true
              reason:
                type: string
              accommodation:
                type: string
              rememberProfile:
                type: boolean
                default: false
              gender:
                type: string
              passportName:
                type: string
              passportNumber:
                type: string
              preferredLanguage:
                type: string
              residentialAddress:
                type: string
              preferredCurrency:
                type: string
      responses:
        400:
          description: The request cannot be empty
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            $ref: '#definitions/Request'
      security:
        - api_key: []

  /requests/one-way:
    post:
      tags:
        - Requests
      summary: Return Trip
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Trip request details
          required: true
          schema:
            type: object
            properties:
              source:
                type: string
              destination:
                type: string
              travelDate:
                type: string
                format: date-time
              reason:
                type: string
              accommodation:
                type: string
              rememberProfile:
                type: boolean
                default: false
              gender:
                type: string
              passportName:
                type: string
              passportNumber:
                type: string
              preferredLanguage:
                type: string
              residentialAddress:
                type: string
              preferredCurrency:
                type: string
      responses:
        201:
          description: success
          schema:
            $ref: '#/definitions/Request'
        400:
          description: Bad request
        401:
          description: Access Denied
        403:
          description: Authentication failed
        409:
          description: Conflict
        201:
          description: Success
      security:
        - api_key: []

  /requests/{requestId}/respond:
    patch:
      tags:
        - Requests
      summary: Approve or Reject Travel Request
      description: Approves or Rejects a travel request
      produces:
        - application/json
      parameters:
        - name: requestId
          in: path
          description: ID of request to update
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: Status of response, approved or rejected
          required: true
          schema:
            type: object
            properties:
              status:
                type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Request'
        400:
          description: Bad request
        401:
          description: Access Denied
        403:
          description: Authentication failed
      security:
        - api_key: []

  /requests/{requestId}:
    patch:
      tags:
        - Requests
      summary: Update request by id
      description: Updates a single request
      operationId: updateRequestById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of request to update
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Updated request object
          required: true
          schema:
            type: object
            properties:
              source:
                type: string
              destination:
                type: string
              travelDate:
                type: string
                format: date-time
              returnDate:
                type: string
                format: date-time
              reason:
                type: string
              accommodation:
                type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Request'
        400:
          description: Bad request
        401:
          description: Access Denied
        403:
          description: Authentication failed
      security:
        - api_key: []

  /requests/return:
    post:
      tags:
        - Requests
      summary: Return Trip
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Return trip details
          required: true
          schema:
            type: object
            properties:
              source:
                type: string
              destination:
                type: string
              travelDate:
                type: string
                format: date-time
              returnDate:
                type: string
                format: date-time
              travelDate:
                type: string
              reason:
                type: string
              accommodation:
                type: string
              rememberProfile:
                type: boolean
                default: false
              gender:
                type: string
              passportName:
                type: string
              passportNumber:
                type: string
              preferredLanguage:
                type: string
              residentialAddress:
                type: string
              preferredCurrency:
                type: string
      responses:
        201:
          description: successful operation
          schema:
            $ref: '#/definitions/Request'
        400:
          description: Bad request
        401:
          description: Access Denied
        403:
          description: Authentication failed
      security:
        - api_key: []
        - in: header
          name: token
          description: an authorization header
          required: true
          type: string
      security:
        - Basic: []
      responses:
        400:
          description: Invalid Credentials
        409:
          description: Conflict
        401:
          description: Authorization failure
        201:
          description: Success

  /requests/search:
    get:
      tags:
        - Requests
      summary: Search Functionality
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: source
          schema:
            type: String
          description: Search by source
        - in: query
          name: destination
          schema:
            type: String
          description: Search by destination
        - in: query
          name: userId
          schema:
            type: String
          description: Search by userId
        - in: query
          name: id
          schema:
            type: String
          description: Search by request ID
        - in: query
          name: status
          schema:
            type: String
          description: Search by request status
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Request'
        400:
          description: Bad request
        401:
          description: Access Denied
        403:
          description: Authentication failed
      security:
        - api_key: []
        - in: header
          name: token
          description: an authorization header
          required: true
          type: string
      security:
        - Basic: []
      responses:
        400:
          description: Invalid Credentials
        401:
          description: Authorization failure
        200:
          description: Success
   
  /accommodation:
    post:
      tags: 
        - Book Accommodation 
      summary: Add new accommodation centre
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: name
          in: formData
          type: string
          required: true
        - name: country
          in: formData
          type: string
          required: true
        - name: state
          in: formData
          type: string
          required: true
        - name: city
          in: formData
          type: string
          required: true
        - name: address
          in: formData
          type: string
          required: true
        - name: image
          in: formData
          type: file
          required: true
        - name: description
          in: formData
          type: string
      responses:
        400:
          description: This centre already exists
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            $ref: '#definitions/Accommodation'
      security:
        - api_key: []
    get:
      tags: 
        - Book Accommodation 
      summary: Get all accommodation
      produces:
        - application/json
      responses:
        404:
          description: No accommodation yet
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            $ref: '#definitions/GetAccommodation'
      security:
        - api_key: []
  /accommodation/{id}:
    patch:
      tags: 
        - Book Accommodation 
      summary: Update existing accommodation centre
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: integer
          required: true
        - name: name
          in: formData
          type: string
          required: true
        - name: country
          in: formData
          type: string
          required: true
        - name: state
          in: formData
          type: string
          required: true
        - name: city
          in: formData
          type: string
          required: true
        - name: address
          in: formData
          type: string
          required: true
        - name: image
          in: formData
          type: file
        - name: description
          in: formData
          type: string
      responses:
        400:
          description: You cannot edit this accommodation
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            $ref: '#definitions/Accommodation'
      security:
        - api_key: []
    delete:
      tags: 
        - Book Accommodation 
      summary: Delete accommodation centre
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        400:
          description: You cannot delete this accommodation
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            properties:
              status:
                type: string
              message:
                type: string
      security:
        - api_key: []
  /accommodation/{accommodationId}/room:
    post:
      tags: 
        - Book Accommodation 
      summary: Add new room to centre
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: accommodationId
          required: true
        - name: name
          in: formData
          type: string
          required: true
        - name: roomType
          in: formData
          type: string
          required: true
        - name: facilities
          in: formData
          type: string
          required: true
        - name: price
          in: formData
          type: string
        - name: status
          in: formData
          type: string
        - name: images
          in: formData
          type: file
          required: true
        - name: description
          in: formData
          type: string
      responses:
        400:
          description: This room already exists
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            $ref: '#definitions/Room'
      security:
        - api_key: []
  /accommodation/{id}/room:
    patch:
      tags: 
        - Book Accommodation 
      summary: Update existing room details
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
        - name: name
          in: formData
          type: string
          required: true
        - name: roomType
          in: formData
          type: string
          required: true
        - name: facilities
          in: formData
          type: string
          required: true
        - name: price
          in: formData
          type: string
        - name: status
          in: formData
          type: string
        - name: images
          in: formData
          type: file
        - name: description
          in: formData
          type: string
      responses:
        400:
          description: The room does not exists
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            $ref: '#definitions/Room'
      security:
        - api_key: []
    delete:
      tags: 
        - Book Accommodation 
      summary: Delete accommodation room
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: integer
          required: true
      responses:
        400:
          description: The operation was not successfully
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            properties:
              status:
                type: string
              message:
                type: string
      security:
        - api_key: []
  /requests/{requestId}/comments:
    post:
      tags:
        - Comments
      summary: Creates a comment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Comment body
          required: true
          schema:
            type: object
            properties:
              comment:
                type: string
        - in: path
          name: requestId
          required: true
          type: integer
      responses:
        400:
          description: Error
        201:
          description: Success   
      security:
        - api_key: [] 
    get: 
      tags:
        - Comments
      summary: Gets all request comments
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
        - name: name
          in: formData
          type: string
          required: true
        - name: roomType
          in: formData
          type: string
          required: true
        - name: facilities
          in: formData
          type: string
          required: true
        - name: price
          in: formData
          type: string
        - name: status
          in: formData
          type: string
        - name: images
          in: formData
          type: file
        - name: description
          in: formData
          type: string
      responses:
        400:
          description: The room does not exists
        401:
          description: Access Denied, No token provided
        200:
          description: Success
          schema:
            $ref: '#definitions/Room'
      security:
        - api_key: []
  /requests/{requestId}/comments/{commentId}:
    delete:
      tags:
        - Comments
      summary: Deletes a comment
      produces:
        - application/json
      parameters:
        - in: path
          name: requestId
          required: true
          type: integer
        - in: path
          name: commentId
          required: true
          type: integer
      responses:
        400:
          description: Error
        200:
          description: Success 
      security:
        - api_key: []
definitions:
  AuthResponse:
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          token:
            type: string
          id:
            type: integer
          email:
            type: string
            format: email
          firstName:
            type: string
          lastName:
            type: string
          isAdmin:
            type: boolean
            default: false
          isVerified:
            type: boolean
            default: false
          roleId:
            type: integer
          gender:
            type: string
            nullable: true
          dateOfBirth:
            type: string
            format: date
            nullable: true
          preferredLanguage:
            type: string
            nullable: true
          residentialAddress:
            type: string
            nullable: true
          preferredCurrency:
            type: string
            nullable: true
          createdAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
  UsersResponse:
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          id:
            type: integer
          email:
            type: string
            format: email
          firstName:
            type: string
          lastName:
            type: string
          isAdmin:
            type: boolean
            default: false
          isVerified:
            type: boolean
            default: false
          roleId:
            type: integer
          gender:
            type: string
            nullable: true
          dateOfBirth:
            type: string
            format: date
            nullable: true
          preferredLanguage:
            type: string
            nullable: true
          residentialAddress:
            type: string
            nullable: true
          preferredCurrency:
            type: string
            nullable: true
          createdAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
  ErrorResponse:
    properties:
      status:
        type: string
      error:
        type: string
  Request:
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          id:
            type: integer
          source:
            type: string
            required: true
          destination:
            type: array
            items:
              type: string
            required: true
          tripType:
            type: string
          travelDate:
            type: string
            format: date
            required: true
          returnDate:
            type: string
            format: date
            required: true
          reason:
            type: string
          accommodation:
            type: string
          userId:
            type: integer
          rememberProfile:
            type: boolean
          gender:
            type: string
          passportName:
            type: string
          passportNumber:
            type: string
          preferredLanguage:
            type: string
          residentialAddress:
            type: string
          preferredCurrency:
            type: string

  DownlineRequests:
    properties:
      status:
        type: string
      data:
        type: array
        items:
          properties:
            id:
              type: integer
            source:
              type: string
              required: true
            destination:
              type: array
              items:
                type: string
              required: true
            type:
              type: string
            travelDate:
              type: string
              format: date
              required: true
            returnDate:
              type: string
              format: date
              required: true
            reason:
              type: string
            accommodation:
              type: string
            userId:
              type: integer
            user:
              type: object
              items:
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
  MyRequest:
    properties:
      status:
        type: string
      data:
        type: array
        items:
          properties:
            id:
              type: integer
            source:
              type: string
              required: true
            destination:
              type: array
              items:
                type: string
              required: true
            type:
              type: string
            travelDate:
              type: string
              format: date
              required: true
            returnDate:
              type: string
              format: date
              required: true
            reason:
              type: string
            accommodation:
              type: string
            userId:
              type: integer
  Room:
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          roomType:
            type: string
          facilities:
            type: array
            items:
              type: string
          price:
            type: number
          status:
            type: string
          images:
            type: array
            items:
              type: string
          description:
            type: string
          accommodationId:
            type: integer
  Accommodation:
    properties:
      status:
        type: string
      data:
        properties:
          id:
            type: integer
          name:
            type: string
          country:
            type: string
          state:
            type: string
          city:
            type: string
          address:
            type: string
          image:
            type: string
          description:
            type: string
          roomsCount:
            type: integer
  GetAccommodation:
    properties:
      status:
        type: string
      data:
        type: array
        items:
          properties:
            id:
              type: integer
            name:
              type: string
            country:
              type: string
            state:
              type: string
            city:
              type: string
            address:
              type: string
            image:
              type: string
            description:
              type: string
            roomsCount:
              type: integer
            Rooms:
              type: array
              items:
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  roomType:
                    type: string
                  facilities:
                    type: array
                    items:
                      type: string
                  price:
                    type: number
                  status:
                    type: string
                  images:
                    type: array
                    items:
                      type: string
                  description:
                    type: string
                  accommodationId:
                    type: integer
            rememberProfile:
              type: boolean
            gender:
              type: string
            passportName:
              type: string
            passportNumber:
              type: string
            preferredLanguage:
              type: string
            residentialAddress:
             type: string
            preferredCurrency:
              type: string

securityDefinitions:
  api_key:
    type: apiKey
    name: token
    in: header
definitions:
  Request:
    type: object
schemes:
  - https
  - http
