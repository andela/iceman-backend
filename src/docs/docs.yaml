swagger: '2.0'
info:
  description: |
    Barefoot nomad is an application that will enable its “Company Nomads” book their international travel and accommodation globally; easily and conveniently across all the locations/centers where the Company has its operations.
  version: 1.0.0
  title: Barefoot Nomad
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

tags:
  - name: Auth
    description: Manage User Authentication and Profile
host: localhost:3000
basePath: /api/v1
paths:
  /auth/profile:
    get:
      tags:
        - Users
      summary: View user's profile information
      description: View user's profile information
      produces:
        - application/json
      parameters:
        - in: header
          name: token
          description: User authentication token
          required: true
          type: string
      responses:
        401:
          description: No token provided
          schema:
            $ref: '#definitions/ErrorResponse'
        400:
          description: Invalid token
          schema:
            $ref: '#definitions/ErrorResponse'
        200:
          description: Success
          schema:
            $ref: '#definitions/UsersResponse'
    patch:
      tags:
        - Users
      summary: Update user's profile information
      description: Update user's profile information
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: token
          description: User authentication token
          required: true
          type: string
        - in: body
          name: body
          description: Details to be updated
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              gender:
                type: string
              date_of_birth:
                type: string
                format: date
              preferred_language:
                type: string
              residential_address:
                type: string
              preferred_currency:
                type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#definitions/UsersResponse'
        400:
          description: Bad request
          schema:
            $ref: '#definitions/ErrorResponse'
        401:
          description: No token provided
          schema:
            $ref: '#definitions/ErrorResponse'

  /auth/login:
    post:
      tags:
        - Auth
      summary: Logs in a user
      description: Logs in a user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User details
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        400:
          description: Invalid Credentials
          schema:
            $ref: '#definitions/ErrorResponse'
        500:
          description: Unexpected Error
        200:
          description: Success
          schema:
            $ref: '#definitions/AuthResponse'
  /auth/signup:
    post:
      tags:
        - Auth
      summary: Create User Account
      description: Creates a new user account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User details
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        409:
          description: Email already exists
          schema:
            $ref: '#definitions/ErrorResponse'
        201:
          description: Success
          schema:
            $ref: '#definitions/AuthResponse'
  /auth/facebook:
    get:
      tags:
        - Auth
      summary: Logs in a user using facebook
      produces:
        - application/json
      responses:
        500:
          description: Unexpected Error
        400:
          description: Invalid Credentials
        200:
          description: Success
          schema:
            $ref: '#definitions/AuthResponse'
  /auth/google:
    get:
      tags:
        - Auth
      summary: Logs in a user using google
      produces:
        - application/json
      responses:
        500:
          description: Unexpected Error
        400:
          description: Invalid Credentials
        200:
          description: Success
          schema:
            $ref: '#definitions/AuthResponse'

  /auth/verify?token:
    get:
      tags:
        - Auth
      summary: Verifies User Email
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: token
          description: User token
          required: true
          schema:
            type: string
            properties:
              email:
                type: string
      responses:
        400:
          description: Error
        200:
          description: Success
  /auth/resend_verification_link:
    post:
      tags:
        - Auth
      summary: Resend Verification Link
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: email
          description: User email
          required: true
          schema:
            type: string
            properties:
              email:
                type: string
      responses:
        400:
          description: error
        200:
          description: Success
  /auth/forgot_password:
    post:
      tags:
        - Auth
      summary: sends change mail paswword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: email
          description: User Email
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        404:
          description: Email Not Found
        200:
          description: Success
  /auth/reset_password/{token}:
    patch:
      tags:
        - Auth
      summary: changes user password
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: password
          description: New password
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
        - in: path
          name: token
          required: true
          type: string
      responses:
        404:
          description: Email Not Found
        200:
          description: Success
  /requests/oneway:
    post:
      tags:
        - Requests
      summary: Return Trip
      security:
        - BasicAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of request to update
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Updated request object
        - in: body
          name: body
          description: Trip request details
          required: true
          schema:
            type: object
            properties:
              source:
                type: string
              destination:
                type: string
              tripType:
                type: string
                description: Trip type
                enum:
                  - oneway
                  - return
                  - multicity
              travelDate:
                type: string
                format: date-time
              returnDate:
                type: string
                format: date-time
              travelDate:
                type: string
              reason:
                type: string
              accommodation:
                type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Request'
        400:
          description: Bad request
        401:
          description: Access Denied
        403:
          description: Authentication failed
      security:
        - api_key: []
        - in: header
          name: token
          description: an authorization header
          required: true
          type: string
      security:
        - Basic: []
      responses:
        400:
          description: Invalid Credentials
        409:
          description: Conflict
        401:
          description: Authorization failure
        201:
          description: Success
  /requests/{id}:
    patch:
      tags:
        - Requests
      summary: Update request by id
      description: Updates a single request
      operationId: updateRequestById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of request to update
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Updated request object
          required: true
          schema:
            type: object
            properties:
              source:
                type: string
              destination:
                type: string
              tripType:
                type: string
                description: Trip type
                enum:
                  - oneway
                  - return
                  - multicity
              travelDate:
                type: string
                format: date-time
              returnDate:
                type: string
                format: date-time
              reason:
                type: string
              accommodation:
                type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Request'
        400:
          description: Bad request
        401:
          description: Access Denied
        403:
          description: Authentication failed
      security:
        - api_key: []
definitions:
  AuthResponse:
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          token:
            type: string
          id:
            type: integer
          email:
            type: string
            format: email
          first_name:
            type: string
          last_name:
            type: string
          is_admin:
            type: boolean
            default: false
          is_verified:
            type: boolean
            default: false
          role:
            type: string
            default: requester
          gender:
            type: string
            nullable: true
          date_of_birth:
            type: string
            format: date
            nullable: true
          preferred_language:
            type: string
            nullable: true
          residential_address:
            type: string
            nullable: true
          preferred_currency:
            type: string
            nullable: true
          createdAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
  UsersResponse:
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          id:
            type: integer
          email:
            type: string
            format: email
          first_name:
            type: string
          last_name:
            type: string
          is_admin:
            type: boolean
            default: false
          is_verified:
            type: boolean
            default: false
          role:
            type: string
            default: requester
          gender:
            type: string
            nullable: true
          date_of_birth:
            type: string
            format: date
            nullable: true
          preferred_language:
            type: string
            nullable: true
          residential_address:
            type: string
            nullable: true
          preferred_currency:
            type: string
            nullable: true
          createdAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
  ErrorResponse:
    properties:
      status:
        type: string
      error:
        type: string
  Request:
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          id:
            type: integer
          source:
            type: string
          destination:
            type: string
          tripType:
            type: string
            description: Trip type
            enum:
              - oneway
              - return
              - multicity
          travelDate:
            type: string
            format: date-time
          returnDate:
            type: string
            format: date-time
          reason:
            type: string
          accommodation:
            type: string
          status:
            type: string
          userId:
            type: integer
securityDefinitions:
  api_key:
    type: apiKey
    name: token
    in: header
definitions:
  Request:
    type: object
schemes:
  - https
  - http
