swagger: '2.0'
info:
  description: |
    Barefoot nomad is an application that will enable its “Company Nomads” book their international travel and accommodation globally; easily and conveniently across all the locations/centers where the Company has its operations.
  version: 1.0.0
  title: Barefoot Nomad

tags:
<<<<<<< HEAD
  - name: auth
    description: Authentication routes
=======
<<<<<<< HEAD
  - name: Authentication
    description: Manage User Accout
>>>>>>> feature(documentation):update README.md and swagger doc
host: localhost:3000
basePath: /api/v1
paths:
  /auth/login:
    post:
      tags:
<<<<<<< HEAD
        - auth
      summary: Logs in a user
=======
        - Authentication
  - name: users
    description: Manage User Accout
host: localhost:3000
basePath: /api/v1
paths:
  /api/v1/auth/signup:
    post:
      tags:
        - users
      summary: Add a new user account
>>>>>>> feature(documentation):update README.md and swagger doc
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
<<<<<<< HEAD
        - in: body
          name: body
          description: User details
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        400:
          description: Invalid Credentials
        200:
          description: Success
          schema:
            $ref: '#definitions/AuthReponse'
  /auth/signup:
    post:
      tags:
        - auth
      summary: Create User Account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User details
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        409:
          description: Email already exists
        201:
          description: Success
          schema:
            $ref: '#definitions/AuthReponse'
  /auth/forgot_password:
    post:
      tags:
        - auth
      summary: sends change mail paswword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: email
          description: User Email
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        404:
          description: Email Not Found
        200:
          description: Success
  /auth/reset_password/{token}:
    patch:
      tags:
        - auth
      summary: changes user password
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: password
          description: New password
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
        - in: path
          name: token
          required: true
          type: string
      responses:
        404:
          description: Email Not Found
        200:
          description: Success
definitions:
  AuthReponse:
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          token:
            type: string
          id:
            type: integer
          email:
            type: string
          first_name:
            type: string
          last_name:
            type: string
          is_admin:
            type: boolean
            default: false
          is_verified:
            type: boolean
            default: false
schemes:
  - https
  - http
